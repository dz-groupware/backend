<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.backend.menu.mapper.MenuMapper">

  <!-- 마스터인지 확인 -->
  <select id="checkMaster">
    select master_yn from employee where id=#{empId};
  </select>

  <!-- 사원/부서/회사 존재여부 확인 -->
  <select id="checkExits">
    SELECT COUNT(*) FROM EMPLOYEE WHERE ACCOUNT_YN=1 AND DELETED_YN = 0 AND ID= #{empId} AND USER_ID=#{userId}
    UNION
    SELECT COUNT(*)FROM EMPLOYEE_DEPARTMENT
    WHERE transferred_yn = 0 and deleted_yn = 0 and emp_id = #{empId} and org = 1 AND DEPT_ID= #{deptId}
    UNION
    select COUNT(*)from employee_company where emp_id=#{empId} and resigned_yn=0 and deleted_yn = 0 AND COMP_ID=#{compId};
  </select>

  <!-- GNB 메뉴 리스트 -->
  <select id="getGnbByEmpId" resultType="com.example.backend.menu.dto.MenuDto">
    SELECT id, par_id, NAME, ICON_URL, SORT_ORDER, NAME_TREE FROM MENU
    INNER JOIN
    (SELECT distinct MENU_ID FROM AUTH_MENU INNER JOIN
    (select auth_id from auth_employee where emp_id = #{empId} and deleted_yn = 0
    union
    SELECT AUTH_ID FROM AUTH_DEPARTMENT where dept_id = #{deptId} and deleted_yn = 0
    union
    select AUTH_ID from auth_company where comp_id = #{compId} and deleted_yn = 0
    )ADMIN
    WHERE AUTH_MENU.DELETED_YN = 0 AND AUTH_MENU.AUTH_ID = ADMIN.AUTH_ID)MENU_LIST
    WHERE ENABLED_YN = 1 AND DELETED_YN = 0 AND MENU.ID=MENU_LIST.MENU_ID AND ID = PAR_ID order by sort_order desc;
  </select>

  <!-- GNB 메뉴 리스트 : 마스터 -->
  <select id="getGnbForMaster">
    select * from menu where id=par_id and comp_id=#{compId} order by sort_order desc;
  </select>

  <!-- GNB 즐겨찾기 리스트 -->
  <select id="getFavorByEmpId" resultType="com.example.backend.menu.dto.MenuDto">
    select menu.id, par_id, name, icon_url, sort_order, name_tree, child_node_yn from
    (select id, par_id, name, icon_url, sort_order, name_tree, child_node_yn from menu inner join
    (SELECT auth_menu.MENU_ID FROM AUTH_MENU INNER JOIN
    (select auth_id from auth_company where comp_id= #{compId}
    union select auth_id from AUTH_DEPARTMENT where dept_id= #{deptId}
    union select auth_id from auth_employee where emp_id= #{empId} )auth
    where auth.auth_id = auth_menu.auth_id)menu_list
    where menu_list.menu_id = menu.id)menu
    inner join (select * from favor where emp_id= #{empId})favor
    where menu.id=favor.menu_id;
  </select>

  <!-- GNB 즐겨찾기 리스트 : 마스터 -->
  <select id="getFavorForMaster" resultType="com.example.backend.menu.dto.MenuDto">
    select menu.id, par_id, name, icon_url, sort_order, name_tree, child_node_yn from menu
    inner join (select * from favor where emp_id= #{empId})favor
    where menu.id=favor.menu_id;
  </select>

  <!-- GNB 즐겨찾기 삭제 -->
  <delete id="removeFavor">
    DELETE FROM FAVOR WHERE EMP_ID=#{empId} AND MENU_ID=#{menuId}
  </delete>

  <!-- LNB 리스트 (LNB 최상단 : GNB -> LNB) -->
  <select id="getMenuById" resultType="com.example.backend.menu.dto.MenuDto">
    select id, par_id, name, icon_url, sort_order, name_tree, child_node_yn from menu inner join
    (SELECT auth_menu.MENU_ID FROM AUTH_MENU INNER JOIN
    (select auth_id from auth_company where comp_id= #{compId}
    union select auth_id from AUTH_DEPARTMENT where dept_id=#{deptId}
    union select auth_id from auth_employee where emp_id=#{empId})auth
    where auth.auth_id = auth_menu.auth_id)menu_list
    where menu_list.menu_id = menu.id and par_id=#{menuId} and id != par_id and enabled_yn=1 and deleted_yn=0 order by sort_order desc;
  </select>

  <!-- LNB 리스트 (LNB 최상단 : GNB -> LNB) : 마스터-->
  <select id="getMenuForMaster" resultType="com.example.backend.menu.dto.MenuDto">
    SELECT id, par_id, NAME, ICON_URL, SORT_ORDER, name_tree, child_node_yn FROM MENU
    where comp_id =#{compId} and menu.enabled_yn = 1 and menu.deleted_yn = 0 and menu.id != par_id and par_id=#{menuId} order by sort_order desc;
  </select>

  <!-- 메뉴설정 : 상위메뉴 GNB 리스트 (권한 확인) -->
  <select id="getUpperMenuGnb" resultType="com.example.backend.menu.dto.MenuDto">
    select distinct menu.id, par_id, name, sort_order from auth_dashboard
    inner join auth_menu on auth_menu.auth_id = auth_dashboard.auth_id and comp_id= #{compId}
    inner join menu on menu.id = auth_menu.menu_id
    where auth_menu.deleted_yn = 0 and auth_dashboard.deleted_yn = 0
    and menu.enabled_yn = 1 and menu.deleted_yn = 0 and menu.id = par_id order by sort_order;
  </select>

  <!-- 메뉴설정 : 상위메뉴 LNB 리스트 (권한 확인) -->
  <select id="getUpperMenuLnb" resultType="com.example.backend.menu.dto.MenuDto">
    select distinct menu.id, par_id, name, sort_order from auth_dashboard
    inner join auth_menu on auth_menu.auth_id = auth_dashboard.auth_id and comp_id= #{compId}
    inner join menu on menu.id = auth_menu.menu_id
    where auth_menu.deleted_yn = 0 and auth_dashboard.deleted_yn = 0
    and menu.enabled_yn = 1 and menu.deleted_yn = 0 and par_id = #{menuId} and menu.id != menu.par_id
    order by sort_order;
  </select>

  <!-- 메뉴설정 : 상위메뉴 GNB 리스트 (마스터) -->
  <select id="getUpperMenuGnbForMaster" resultType="com.example.backend.menu.dto.MenuDto">
    select id, par_id, comp_id, name, sort_order from menu
    where comp_id=#{compId} and enabled_yn = 1 and menu.deleted_yn = 0 and menu.id = par_id order by sort_order;
  </select>

  <!-- 메뉴설정 : 상위메뉴 LNB 리스트 (마스터) -->
  <select id="getUpperMenuLnbForMaster" resultType="com.example.backend.menu.dto.MenuDto">
    select id, par_id, comp_id, name, sort_order from menu
    where comp_id=#{compId} and enabled_yn = 1 and menu.deleted_yn = 0
    and par_id = #{menuId} and id != par_id order by sort_order;
  </select>

  <!-- 메뉴(라우팅) 리스트 -->
  <select id="getMenuList" resultType="com.example.backend.menu.dto.RouteDto">
    SELECT M.ID as menu_id, par.NAME as gnb_name, M.NAME_TREE, par.ID as gnb_id, P.NAME as page FROM MENU AS M
    INNER JOIN PAGE AS P ON M.PAGE_ID = P.ID
    left join menu as par on m.name_tree like concat(par.name, '%')
    inner join (select menu_id from auth_menu
    inner join (select auth_id from auth_employee where emp_id= #{empId}
    union select auth_id from auth_department where dept_id = #{deptId}
    union select auth_id from auth_company where comp_id = #{compId})admin
    on auth_menu.auth_id = admin.auth_id)menuList
    on menuList.menu_id = m.id where m.enabled_yn = 1 and m.deleted_yn = 0;
  </select>

  <!-- 메뉴(라우팅) 리스트 : 마스터 -->
  <select id="getMenuListForMaster" resultType="com.example.backend.menu.dto.RouteDto">
    SELECT M.ID as menu_id, par.NAME as gnb_name, M.NAME_TREE, par.ID as gnb_id, P.NAME as page FROM MENU AS M
    INNER JOIN PAGE AS P ON M.PAGE_ID = P.ID
    left join menu as par on m.name_tree like concat(par.name, '%')
    where m.enabled_yn = 1 and m.deleted_yn = 0 and m.comp_id = #{compId};
  </select>

</mapper>