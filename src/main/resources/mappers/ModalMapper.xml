<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.backend.modal.mapper.ModalMapper">

  <!-- 모든 프로필 정보 가져오기 -->
  <select id="getProfileByUserId" resultType="com.example.backend.modal.dto.ProfileRes">
    SELECT company.id AS comp_id, company.name AS comp_name, department.id AS dept_id,
    department.name AS dept_name, employee.id AS emp_id, employee.name AS emp_name,
    last_ip, last_access, employee.position, image_url FROM user
    INNER JOIN employee ON user.id = employee.user_id AND employee.user_id = #{userId}
    LEFT JOIN employee_department ON employee.id = employee_department.emp_id AND (org = 1 OR org IS NULL)
    LEFT JOIN employee_company ON employee.id = employee_company.emp_id
    LEFT JOIN department ON department.id = employee_department.dept_id
    LEFT JOIN company ON company.id = employee_company.comp_id
    WHERE (employee_department.deleted_yn = 0 OR employee_department.deleted_yn IS NULL)
    AND (department.enabled_yn = 1 OR department.enabled_yn IS NULL)
    AND (employee_department.transferred_yn = 0 OR employee_department.transferred_yn IS NULL)
    AND employee_company.resigned_yn = 0 AND employee_company.deleted_yn = 0
    AND (department.deleted_yn = 0 OR department.deleted_yn IS NULL);
  </select>

  <!-- 조직도 트리 : 회사 리스트-->
  <select id="getCompToGnb" resultType="com.example.backend.modal.dto.TreeItemRes">
    SELECT id, par_id, name, sort_order, 'comp' AS type FROM company
    WHERE enabled_yn = 1 AND deleted_yn = 0 ORDER BY sort_order DESC;
  </select>

  <!-- 조직도 트리 : 회사 선택 시 부서 -->
  <select id="getGnbToLnb" resultType="com.example.backend.modal.dto.TreeItemRes">
    SELECT id, par_id, name, sort_order, comp_id, 'dept' AS type FROM department
    WHERE comp_id = #{compId} AND id = par_id AND enabled_yn = 1 AND deleted_yn = 0 ORDER BY sort_order DESC;
  </select>

  <!-- 조직도 트리 : 부서 선택 시 부서 -->
  <select id="getLnbToLnb" resultType="com.example.backend.modal.dto.TreeItemRes">
    SELECT id, par_id, name, sort_order, comp_id, 'dept' AS type FROM department
    WHERE comp_id = #{compId} AND par_id = #{deptId} AND id != par_id AND enabled_yn = 1 AND deleted_yn = 0;
  </select>

  <!-- 사원 리스트 : 회사 선택 시 -->
  <select id="getEmpListByCompId" resultType="com.example.backend.modal.dto.EmpList">
    SELECT employee.name AS emp_name, company.name AS comp_name, department.name AS dept_name,
    employee.position, login_id, employee.mobile_number AS number, priv_email AS email, image_url FROM company
    INNER JOIN employee_company ON employee_company.resigned_yn = 0
    AND employee_company.deleted_yn = 0 AND comp_id = company.id AND company.id= #{compId}
    INNER JOIN employee ON employee.id = employee_company.emp_id AND employee.account_yn = 1 AND employee.deleted_yn = 0
    LEFT OUTER JOIN user ON user.id = employee.user_id AND user.deleted_yn = 0
    LEFT OUTER JOIN employee_department ON employee_department.emp_id = employee.id
    LEFT OUTER JOIN department ON employee_department.dept_id = department.id WHERE org = 1 OR org IS NULL;
  </select>

  <!-- 사원 리스트 : 부서 선택 시 -->
  <select id="getEmpListByDeptId" resultType="com.example.backend.modal.dto.EmpList">
    SELECT employee.name AS emp_name, company.name AS comp_name, department.name AS dept_name,
    employee.position, user.login_id, employee.mobile_number AS number, priv_email AS email, image_url FROM employee_department
    INNER JOIN department ON employee_department.transferred_yn = 0 AND department.deleted_yn = 0
    AND employee_department.dept_id = #{deptId} AND department.id = employee_department.dept_id
    INNER JOIN employee_company ON employee_department.emp_id = employee_company.emp_id AND
    employee_company.deleted_yn = 0 AND employee_company.resigned_yn = 0 AND employee_company.comp_id = #{compId}
    INNER JOIN company ON employee_company.comp_id = company.id AND company.enabled_yn = 1 AND company.deleted_yn = 0
    INNER JOIN employee ON employee_department.emp_id = employee.id AND employee.account_yn = 1 AND employee.deleted_yn = 0
    INNER JOIN user ON employee.user_id = user.id AND user.deleted_yn = 0 ;
  </select>

  <!-- 조직도 검색 (전체 옵션 - 부서) -->
  <select id="findDeptAllByText" resultType="com.example.backend.modal.dto.TreeItemRes">
    SELECT id, comp_id, department.par_id, name, sort_order, 'dept' AS type FROM department
    INNER JOIN (SELECT par_id FROM company WHERE id = #{compId1})comp
    WHERE department.comp_id = comp.par_id AND name LIKE #{text1} AND enabled_yn = 1 AND deleted_yn = 0
    UNION SELECT id, id AS comp_id, company.par_id, name, sort_order, 'comp' AS type FROM company
    INNER JOIN (SELECT par_id FROM company WHERE id = #{compId2})comp
    WHERE company.par_id = comp.par_id AND name LIKE #{text2} AND enabled_yn = 1 AND deleted_yn = 0;
  </select>

  <!-- 조직도 검색 (전체 옵션 - 사원) -->
  <select id="findEmpAllByText" resultType="com.example.backend.modal.dto.EmpList">
    SELECT employee.name AS emp_name, company.name AS comp_name, department.name AS dept_name,
    employee.position, login_id, employee.mobile_number AS number, priv_email AS email, image_url FROM employee
    INNER JOIN employee_company ON employee_company.emp_id = employee.id AND comp_id = #{compId}
    LEFT JOIN employee_department ON employee_department.emp_id = employee.id AND (org = 1 OR org IS NULL)
    LEFT JOIN company ON employee_company.comp_id = company.id
    LEFT JOIN department ON department.id = employee_department.dept_id
    INNER JOIN user ON employee.user_id = user.id
    WHERE employee_company.deleted_yn = 0 AND employee_company.resigned_yn = 0 AND employee_company.comp_id = 1
    AND company.enabled_yn = 1 AND company.deleted_yn = 0 AND employee.account_yn = 1 AND employee.deleted_yn = 0
    AND (employee_department.transferred_yn = 0 OR employee_department.transferred_yn IS NULL)
    AND (department.deleted_yn = 0 OR department.deleted_yn IS NULL) AND user.deleted_yn = 0
    AND employee.name LIKE #{text1} OR company.name LIKE #{text2} or department.name LIKE #{text3} or
    employee.position LIKE #{text4} OR login_id LIKE #{text5} or employee.mobile_number LIKE #{text6} or priv_email LIKE #{text7};
  </select>

  <!-- 조직도 검색 (부서 옵션) -->
  <select id="findResultOfDept" resultType="com.example.backend.modal.dto.TreeItemRes">
    SELECT id, comp_id, department.par_id, name, sort_order, 'dept' AS type FROM department
    WHERE name_tree LIKE #{text} AND enabled_yn = 1 AND deleted_yn = 0;
  </select>

  <!-- 조직도 검색 (사원 옵션) -->
  <select id="findResultOfEmp" resultType="com.example.backend.modal.dto.EmpList">
    SELECT employee.name AS emp_name, company.name AS comp_name, department.name AS dept_name,
    employee.position, login_id, employee.mobile_number AS number, priv_email AS email, image_url FROM employee
    INNER JOIN employee_company ON employee_company.emp_id = employee.id
    LEFT JOIN employee_department ON employee_department.emp_id = employee.id AND (org = 1 OR org IS NULL)
    LEFT JOIN company ON employee_company.comp_id = company.id
    LEFT JOIN department ON department.id = employee_department.dept_id
    INNER JOIN user ON employee.user_id = user.id
    WHERE employee_company.deleted_yn = 0 AND employee_company.resigned_yn = 0 AND employee_company.comp_id = 1
    AND company.enabled_yn = 1 AND company.deleted_yn = 0 AND employee.account_yn = 1 AND employee.deleted_yn = 0
    AND (employee_department.transferred_yn = 0 OR employee_department.transferred_yn IS NULL)
    AND (department.deleted_yn = 0 OR department.deleted_yn IS NULL) AND user.deleted_yn = 0
    AND employee.name LIKE #{text};
  </select>

  <!-- 유저의 모든 사원id 가져오기-->
  <select id="checkEmpIds" resultType="java.lang.Long">
    SELECT id FROM employee WHERE user_id = #{userId} AND account_yn = 1 AND deleted_yn = 0;
  </select>

  <!-- 프로필 총 페이지 수 -->
  <select id="getPageCount" resultType="java.lang.Long">
    SELECT COUNT(*) FROM user
    INNER JOIN employee ON user.id = employee.user_id AND employee.user_id = #{userId}
    LEFT JOIN employee_department ON employee.id = employee_department.emp_id AND (org = 1 OR org IS NULL)
    LEFT JOIN employee_company ON employee.id = employee_company.emp_id
    LEFT JOIN department ON department.id = employee_department.dept_id
    LEFT JOIN company ON company.id = employee_company.comp_id
    WHERE (employee_department.deleted_yn = 0 OR employee_department.deleted_yn IS NULL)
    AND (department.enabled_yn = 1 OR department.enabled_yn IS NULL)
    AND (employee_department.transferred_yn = 0 OR employee_department.transferred_yn IS NULL)
    AND employee_company.resigned_yn = 0 AND employee_company.deleted_yn = 0
    AND (department.deleted_yn = 0 OR department.deleted_yn IS NULL);
  </select>


  <!-- 프로필 가져오기 pageNation -->
  <select id="getProfilePage" resultType="com.example.backend.modal.dto.ProfileRes">
    SELECT company.id AS comp_id, company.name AS comp_name, department.id AS dept_id,
    department.name AS dept_name, employee.id AS emp_id, employee.name AS emp_name,
    last_ip, last_access, employee.position, image_url FROM user
    INNER JOIN employee ON user.id = employee.user_id AND employee.user_id = #{userId}
    LEFT JOIN employee_department ON employee.id = employee_department.emp_id AND (org = 1 OR org IS NULL)
    LEFT JOIN employee_company ON employee.id = employee_company.emp_id
    LEFT JOIN department ON department.id = employee_department.dept_id
    LEFT JOIN company ON company.id = employee_company.comp_id
    WHERE (employee_department.deleted_yn = 0 OR employee_department.deleted_yn IS NULL)
    AND (department.enabled_yn = 1 OR department.enabled_yn IS NULL)
    AND (employee_department.transferred_yn = 0 OR employee_department.transferred_yn IS NULL)
    AND employee_company.resigned_yn = 0 AND employee_company.deleted_yn = 0
    AND (department.deleted_yn = 0 OR department.deleted_yn IS NULL) ORDER BY last_access DESC LIMIT 3 OFFSET #{pageNum} ;
  </select>


</mapper>